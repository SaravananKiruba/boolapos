<?xml version="1.0" encoding="UTF-8"?>
<Application x:Class="Page_Navigation_App.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Page_Navigation_App"
             xmlns:view="clr-namespace:Page_Navigation_App.View"
             xmlns:vm="clr-namespace:Page_Navigation_App.ViewModel"
             xmlns:utilities="clr-namespace:Page_Navigation_App.Utilities"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks">
    <Application.Resources>
        <ResourceDictionary>
            <!-- MahApps.Metro ResourceDictionaries -->
            <ResourceDictionary.MergedDictionaries>
                <!-- MahApps Base Styles -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml"/>

                <!-- Theme references -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml"/>
                
                <!-- Application Resources -->
                <ResourceDictionary Source="Resources/Converters.xaml"/>
                <ResourceDictionary Source="Resources/Colors.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- Updated theme colors -->
            <Color x:Key="BackgroundColor">#f9f4ed</Color>
            <!-- Light background -->
            <Color x:Key="PrimaryColor">#b2bd8c</Color>
            <!-- Soft green tone for primary UI elements -->
            <Color x:Key="SurfaceColor">#dacba9</Color>
            <!-- Neutral surface tone -->
            <Color x:Key="TextPrimaryColor">#333333</Color>
            <!-- Dark text for contrast -->
            <Color x:Key="TextSecondaryColor">#d0aa59</Color>
            <!-- Warm gold tone for secondary text -->
            <Color x:Key="TextOnSurfaceColor">#444444</Color>
            <!-- Slightly lighter for surface readability -->
            <Color x:Key="ErrorColor">#d8ba61</Color>
            <!-- Golden tone used as a soft warning/error color -->


            <!-- Create brushes from the defined colors -->
            <SolidColorBrush x:Key="BackgroundBrush"
                    Color="{StaticResource BackgroundColor}"/>
            <SolidColorBrush x:Key="PrimaryBrush"
                    Color="{StaticResource PrimaryColor}"/>
            <SolidColorBrush x:Key="SurfaceBrush"
                    Color="{StaticResource SurfaceColor}"/>
            <SolidColorBrush x:Key="TextPrimaryBrush"
                    Color="{StaticResource TextPrimaryColor}"/>
            <SolidColorBrush x:Key="TextSecondaryBrush"
                    Color="{StaticResource TextSecondaryColor}"/>
            <SolidColorBrush x:Key="TextOnSurfaceBrush"
                    Color="{StaticResource TextOnSurfaceColor}"/>
            <SolidColorBrush x:Key="ErrorBrush"
                    Color="{StaticResource ErrorColor}"/>

            <!-- Adding the missing MahApps.Styles.Button.Accent style -->
            <Style x:Key="MahApps.Styles.Button.Accent"
                    TargetType="{x:Type Button}"
                    BasedOn="{StaticResource MahApps.Styles.Button}">
                <Setter Property="Background"
                        Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="BorderBrush"
                        Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="Foreground"
                        Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
            </Style>
            
            <!-- Add custom style for DateTimePicker -->
            <Style x:Key="MahApps.Styles.DateTimePicker" 
                   TargetType="{x:Type mah:DateTimePicker}">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}" />
                <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            
            <!-- Add custom style for ComboBox -->
            <Style x:Key="MahApps.Styles.ComboBox"
                   TargetType="{x:Type ComboBox}"
                   BasedOn="{StaticResource {x:Type ComboBox}}">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}" />
                <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <!-- Converters -->
            <utilities:ViewModelToTitleConverter x:Key="ViewModelToTitleConverter"/>
            <utilities:LoginStatusTextConverter x:Key="LoginStatusTextConverter"/>
            <utilities:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <utilities:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
            <utilities:LoginButtonTextConverter x:Key="LoginButtonTextConverter"/>
            <utilities:BooleanToStatusBrushConverter x:Key="BooleanToStatusBrushConverter"/>
            <utilities:BooleanToActiveConverter x:Key="BooleanToActiveConverter"/>

            <!-- Define a custom style for NavigationButton (previously defined in local resources) -->
            <Style x:Key="NavigationButton"
                    TargetType="Button"
                    BasedOn="{StaticResource MahApps.Styles.Button.Flat}">
                <Setter Property="Height"
                        Value="45"/>
                <Setter Property="Margin"
                        Value="20,5"/>
                <Setter Property="HorizontalAlignment"
                        Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment"
                        Value="Left"/>
                <Setter Property="Background"
                        Value="Transparent"/>
                <Setter Property="Cursor"
                        Value="Hand"/>
            </Style>

            <!-- View-ViewModel Mappings -->
            <DataTemplate DataType="{x:Type vm:HomeVM}">
                <view:Home/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:CustomerVM}">
                <view:Customers/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:ProductVM}">
                <view:Products/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:OrderVM}">
                <view:Orders/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:TransactionVM}">
                <view:Transactions/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:SupplierVM}">
                <view:Suppliers/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:RateMasterVM}">
                <view:RateMaster/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:RepairJobVM}">
                <view:RepairJobs/>
            </DataTemplate>            <DataTemplate DataType="{x:Type vm:StockVM}">
                <view:Stock/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:UserVM}">
                <view:Users/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:ReportVM}">
                <view:Reports/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:SettingsVM}">
                <view:Settings/>
            </DataTemplate>
        </ResourceDictionary>
    </Application.Resources>
</Application>
